/** \mainpage

<table border="0"><tr>
<td>
+ \subpage Compiling
+ \subpage Using
  - \ref Tutorials
  - \ref Commands
  - \ref Scripts
  - \ref Interfaces
  - \ref Resources
+ \ref DevGuide
  - \ref ChangeLog
  - \ref Contributors
  - [<b>Module list</b>](modules.html)
+ [<b>Wiki</b>](https://github.com/shankar1729/jdftx/wiki)
+ [<b>Report Issues</b>](https://github.com/shankar1729/jdftx/issues)
</td>
<td>
\image html jdftx-256.png
</td>
</tr></table>

JDFTx is a plane-wave density-functional theory (DFT) code
designed to be as easy to develop with as it is easy to use.
It is distributed under the [GPL](http://www.gnu.org/licenses/gpl.html)
license (version 3 or higher) and publications resulting from its use must cite:

+ R. Sundararaman, D. Gunceler, K. Letchworth-Weaver, K. Schwarz and T.A. Arias, *JDFTx*, available from http://jdftx.sourceforge.net (2012)

For any given calculation, JDFTx prints out a list of relevant citations for optional features of the code used in that run.
This output appears at the end of initialization just before the first electronic solve starts.

JDFTx is written using highly-templated and object oriented C++11 code
in order to express all the physics in the DFT++ algeraic framework \cite AlgebraicDFT,
while simultaneously maintaining a small memory footprint and supporting
a range of hardware architectures (such as GPUs using CUDA) without
requiring hand-optimized implementations for each architecture.
See \ref Compiling and \ref Using for setting up and getting started with JDFTx.

## Features

<table><tr>
<td>
<b>Electronic</b>
+ Exchange-correlation: semilocal, meta-GGA,<br>EXX-hybrids, DFT+<i>U</i>, DFT-D2, [LibXC](http://octopus-code.org/wiki/Libxc)
+ Pseudopotentials: norm-conserving and ultrasoft
+ Noncollinear magnetism / spin-orbit coupling
+ Algorithms: varitional minimization \cite AnalyticContinuedDFT \cite AuxiliaryHamiltonian, %SCF \cite DIIS
+ Grand canonical (fixed potential) for electrochemistry \cite GC-DFT
+ Truncated %Coulomb for 0D, 1D, 2D or 3D periodicity \cite TruncatedEXX
+ Custom external potentials, electric fields
+ Charged-defect corrections: bulk and interfacial
+ Ion/lattice optimization with constraints
+ <i>Ab initio</i> molecular dynamics
+ Vibrational modes, phonons and free energies
</td>
<td>
<b>Fluid</b>
+ Linear solvation: GLSSA13 \cite NonlinearPCM, SCCS \cite PCM-SCCS, CANDLE \cite CANDLE
+ Nonlinear solvation: GLSSA13 \cite NonlinearPCM
+ Nonlocal solvation: %SaLSA \cite SaLSA
+ JDFT with classical DFT fluids \cite RigidCDFT \cite PolarizableCDFT

<b>Outputs (selected)</b>
+ %DOS, optical matrix elements, polarizability etc.
+ %Wannier functions \cite MLWF and <i>ab initio</i> tight-binding
+ Electron-electron and electron-phonon scattering

<b>Interfaces</b>
+ Solvated QMC with [CASINO](https://vallico.net/casinoqmc/what-is-casino) \cite Katie-QMC
+ [Atomistic Simulation Environment](https://wiki.fysik.dtu.dk/ase/) (NEB, MD etc.)
+ Visualization: [VESTA](http://jp-minerals.org/vesta/en), [XCrySDen](http://www.xcrysden.org), [PyMOL](https://www.pymol.org) etc.
+ [Bader analysis](http://theory.cm.utexas.edu/henkelman/code/bader) (\ref createVASP script)
</td>
</tr></table>

JDFTx supports all the standard functionality present in any electronic DFT software.
It supports several semilocal, meta-GGA and EXX-hybrid exchange-correlation functions,
with additional options available by linking to [LibXC](http://octopus-code.org/wiki/Libxc) \cite LibXC.
DFT+<i>U</i> \cite DFTplusU is available for treating localized electrons.
Pair potential dispersion corrections \cite Dispersion-Grimme are available for including van der Waals interactions.
JDFTx supports several formats of norm-conserving and ultrasoft pseudopotentials
and comes pre-installed with an opens-ource library for each (see \ref Pseudopotentials).
With truncated %Coulomb interactions \cite TruncatedEXX, JDFTx enables accurate calculations
of systems of any dimensionality from 0 to 3: molecules, wires, slabs / 2D materials and bulk.

A key feature of JDFTx is Joint Density %Functional Theory (JDFT) \cite JDFT, a framework
for *ab initio* calculations of electronic systems in contact with liquid environments.
The full power of Joint Density functional theory is unleashed when electronic DFT
is coupled to a classical DFT or free energy functional for the fluid
(see option ClassicalDFT in command \ref CommandFluid), which accounts for
atomic-scale structure in the fluid \cite BondedVoids \cite RigidCDFT \cite PolarizableCDFT.

Additionally, JDFTx implements a hierarchy of continuum solvation models,
starting with simple local and linear solvation models \cite PCM-Kendra
(option %LinearPCM in command \ref CommandFluid) with several variants
(command \ref CommandPcmVariant) including the default GLSSA13 \cite NonlinearPCM,
SCCS \cite PCM-SCCS (the model in [Quantum Espresso](www.quantum-espresso.org))
and CANDLE \cite CANDLE, which is the recommended solvation model
especially for strongly charged and polar solutes.
Note that GLSSA13 was later ported to [VASP](http://www.vasp.at)
as VASPsol \cite VASPsol; these models are identical.
JDFTx also includes nonlinear solvation models \cite NonlinearPCM
(option %NonlinearPCM in command \ref CommandFluid) that account for
dielectric saturation and ionic nonlinearities in the fluid response.
Finally, the non-empirical solvation model SaLSA captures atomic-scale
nonlocality of the fluid response at a linear-response level
(option %SaLSA in command \ref CommandFluid).

Unlike most other electronic structure codes, by default, JDFTx performs
total energy minimization using analytically continued energy functionals
\cite AnalyticContinuedDFT \cite AuxiliaryHamiltonian,
rather than the conventional %SCF schemes.
Density and potential-mixing %SCF algorithms \cite DIIS are also implemented in JDFTx,
but for difficult systems when %SCF diverges, variational minimization provides
a useful fallback that is guaranteed to converge.
This might be advantageous for vanilla DFT calculations in some cases,
but it is critical for reliable convergence in the presence of liquids,
especially with charged systems.
A particularly useful feature in JDFTx for electrochemical systems
is grand-canonical DFT \cite GC-DFT (see command \ref CommandTargetMu),
which allows the number of electrons to adjust automatically at
a fixed electron chemical potential; variational minimization
is also important for stable convergence in this mode.

JDFTx can export a wide-range of electronic structure and liquid properties
including charge/site densities, potentials, density of states,
vibrational/phonon modes and free energies, optical and electron-phonon
matrix elements etc. (See command \ref CommandDump.)
It can generate maximally-localized %Wannier functions \cite MLWF and
transform Hamiltonians and matrix elements into an *ab initio* tight-binding model.
JDFTx is interfaced with several commonly-used visualization software, and
with the [Atomistic Simulation Environment](https://wiki.fysik.dtu.dk/ase)
for additional features such NEB barrier calculations and molecular dynamics.
It also provides solvation functionality to other electronic structure software
through interfaces, such as for Quantum Monte-Carlo (QMC) simulations in 
[CASINO](https://vallico.net/casinoqmc/what-is-casino) \cite Katie-QMC.

-----

<table>
<tr>
<td>This material is based upon work supported as part of the Energy Materials Center at Cornell (EMC2),
an Energy Frontier Research Center funded by the U.S. Department of Energy, Office of Science,
Office of Basic Energy Sciences under Award Number DE-SC0001086. </td>
<td> <img src="http://www.emc2.cornell.edu/img/emc2logo.png"/> </td>
</tr>
</table>

*/
